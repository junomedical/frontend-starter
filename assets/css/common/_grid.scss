$_gridRaster : 12;
$_gridLayouts : (
  small : ($_wSmall, $_wMedium - 1px),
  medium : ($_wMedium, $_wLarge - 1px),
  large : ($_wLarge, $_wXLarge - 1px),
  xlarge : ($_wXLarge)
);

.grid {
  &__row {
    margin:-$_sNormal;

    &:after {
      display:block;
      content:'';
      clear:left;
    }

    &--collapse {
      margin:0;

      .grid__column {
        padding:0;
      }
    }
  }

  &__column {
    display:block;
    float:left;
    padding:$_sNormal;
    box-sizing:border-box;
  }
}

@each $_gridLayout, $gridLayoutWidths in $_gridLayouts {
  @media only screen and (min-width: #{nth($gridLayoutWidths, 1)}) {
    @for $i from 1 through $_gridRaster {
      .grid__#{$_gridLayout} {
        &--#{$i} {
          width:percentage((1 / $_gridRaster) * $i);
        }

        &--show {
          display:inherit;
        }
        &--hide {
          display:none;
        }
      }
    }
  }

  $rangeStr : '(min-width: #{nth($gridLayoutWidths, 1)})';
  @if length($gridLayoutWidths) > 1 {
    $rangeStr : $rangeStr + ' and (max-width: #{nth($gridLayoutWidths, 2)})';
  }

  @media only screen and #{$rangeStr} {
    @for $i from 1 through $_gridRaster {
      @if $i != $_gridRaster and $_gridRaster % $i == 0 {
        .grid__row--autoclear .grid__#{$_gridLayout}--#{$i}:nth-child(#{$_gridRaster / $i}n+1) {
          clear:left;
        }
      }
    }
  }
}